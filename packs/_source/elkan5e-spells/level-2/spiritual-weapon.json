{
  "name": "Spiritual Weapon",
  "type": "spell",
  "img": "icons/skills/melee/strike-axe-energy-pink.webp",
  "effects": [],
  "folder": "6J3i75lfD1J0xYwA",
  "flags": {
    "itemacro": {
      "macro": {
        "_data": {
          "name": "Spiritual Weapon",
          "type": "script",
          "scope": "global",
          "command": "//DAE Item Macro Execute, value = @item.level\n// Set spell to self cast, no damage/attack roll\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId) || token;\n\nconst castingItem = lastArg.efData.flags.dae.itemData\nlet data = {}\n\n/**\n * Create Spiritual Weapon item in inventory\n */\nif (args[0] === \"on\") {\n  let damage = Math.floor(Math.floor(args[1] / 2));\n  let image = castingItem.img;\n\n  let range = MeasuredTemplate.create({\n    t: \"circle\",\n    user: game.user._id,\n    x: target.x + canvas.grid.size / 2,\n    y: target.y + canvas.grid.size / 2,\n    direction: 0,\n    distance: 60,\n    borderColor: \"#FF0000\",\n    flags: {\n      DAESRD: {\n        SpiritualWeaponRange: {\n          ActorId: tactor.id\n        }\n      }\n    }\n    //fillColor: \"#FF3366\",\n  });\n  range.then(result => {\n    let templateData = {\n      t: \"rect\",\n      user: game.user._id,\n      distance: 7,\n      direction: 45,\n      x: 0,\n      y: 0,\n      flags: {\n        DAESRD: {\n          SpiritualWeapon: {\n            ActorId: tactor.id\n          }\n        }\n      },\n      fillColor: game.user.color\n    }\n    Hooks.once(\"createMeasuredTemplate\", deleteTemplates);\n\n    let template = new game.dnd5e.canvas.AbilityTemplate(templateData)\n    template.actorSheet = tactor.sheet;\n    template.drawPreview()\n\n    async function deleteTemplates(scene, template) {\n      let removeTemplates = canvas.templates.placeables.filter(i => i.data.flags.DAESRD?.SpiritualWeaponRange?.ActorId === tactor.id);\n      await canvas.templates.deleteMany([removeTemplates[0].id]);\n    };\n  })\n  await tactor.createOwnedItem(\n    {\n      \"name\": \"Summoned Spiritual Weapon\",\n      \"type\": \"weapon\",\n      \"data\": {\n        \"equipped\": true,\n        \"identified\": true,\n        \"activation\": {\n          \"type\": \"bonus\",\n        },\n        \"target\": {\n          \"value\": 1,\n          \"width\": null,\n          \"type\": \"creature\"\n        },\n        \"range\": {\n          \"value\": 5,\n          \"units\": \"ft\"\n        },\n        \"ability\": args[2],\n        \"actionType\": \"msak\",\n        \"attackBonus\": \"0\",\n        \"chatFlavor\": \"\",\n        \"critical\": null,\n        \"damage\": {\n          \"parts\": [\n            [\n              `${damage}d8+@mod`,\n              \"force\"\n            ]\n          ],\n        },\n        \"weaponType\": \"simpleM\",\n        \"proficient\": true\n      },\n      \"flags\": {\n        \"DAESRD\": {\n          \"SpiritualWeapon\":\n            target.actor.id\n        }\n      },\n      \"img\": `${image}`,\n    },\n  );\n  ui.notifications.notify(\"Weapon created in your inventory\")\n\n}\n\n// Delete Spitirual Weapon and template\nif (args[0] === \"off\") {\n  let removeItem = tactor.items.find(i => i.data.flags?.DAESRD?.SpiritualWeapon === tactor.id)\n  let template = canvas.templates.placeables.filter(i => i.data.flags.DAESRD.SpiritualWeapon?.ActorId === tactor.id)\n  if(removeItem) await tactor.deleteOwnedItem(removeItem.id);\n  if(template) await canvas.templates.deleteMany(template[0].id)\n}",
          "author": "E4BVikjIkVl2lL2j"
        },
        "data": {
          "name": "Spiritual Weapon",
          "type": "script",
          "scope": "global",
          "command": "//DAE Item Macro Execute, value = @item.level\n// Set spell to self cast, no damage/attack roll\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId) || token;\n\nconst castingItem = lastArg.efData.flags.dae.itemData\nlet data = {}\n\n/**\n * Create Spiritual Weapon item in inventory\n */\nif (args[0] === \"on\") {\n  let damage = Math.floor(Math.floor(args[1] / 2));\n  let image = castingItem.img;\n\n  let range = canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", [{\n    t: \"circle\",\n    user: game.user._id,\n    x: target.x + canvas.grid.size / 2,\n    y: target.y + canvas.grid.size / 2,\n    direction: 0,\n    distance: 60,\n    borderColor: \"#FF0000\",\n    flags: {\n      DAESRD: {\n        SpiritualWeaponRange: {\n          ActorId: tactor.id\n        }\n      }\n    }\n    //fillColor: \"#FF3366\",\n  }]);\n  range.then(result => {\n    let templateData = {\n      t: \"rect\",\n      user: game.user._id,\n      distance: 7,\n      direction: 45,\n      x: 0,\n      y: 0,\n      flags: {\n        DAESRD: {\n          SpiritualWeapon: {\n            ActorId: tactor.id\n          }\n        }\n      },\n      fillColor: game.user.color\n    }\n    Hooks.once(\"createMeasuredTemplate\", deleteTemplates);\n\n    let doc = new CONFIG.MeasuredTemplate.documentClass(templateData, { parent: canvas.scene })\n    let template = new game.dnd5e.canvas.AbilityTemplate(doc)\n    template.actorSheet = tactor.sheet;\n    template.drawPreview()\n\n    async function deleteTemplates() {\n      let removeTemplates = canvas.templates.placeables.filter(i => i.data.flags.DAESRD?.SpiritualWeaponRange?.ActorId === tactor.id);\n      await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [removeTemplates[0].id]);\n    };\n  })\n  await tactor.createOwnedItem(\n    {\n      \"name\": \"Summoned Spiritual Weapon\",\n      \"type\": \"weapon\",\n      \"data\": {\n        \"equipped\": true,\n        \"identified\": true,\n        \"activation\": {\n          \"type\": \"bonus\",\n        },\n        \"target\": {\n          \"value\": 1,\n          \"width\": null,\n          \"type\": \"creature\"\n        },\n        \"range\": {\n          \"value\": 5,\n          \"units\": \"ft\"\n        },\n        \"ability\": args[2],\n        \"actionType\": \"msak\",\n        \"attackBonus\": \"0\",\n        \"chatFlavor\": \"\",\n        \"critical\": null,\n        \"damage\": {\n          \"parts\": [\n            [\n              `${damage}d8+@mod`,\n              \"force\"\n            ]\n          ],\n        },\n        \"weaponType\": \"simpleM\",\n        \"proficient\": true\n      },\n      \"flags\": {\n        \"DAESRD\": {\n          \"SpiritualWeapon\":\n            target.actor.id\n        }\n      },\n      \"img\": `${image}`,\n      \"effects\" : []\n    },\n  );\n  ui.notifications.notify(\"Weapon created in your inventory\")\n\n}\n\n// Delete Spitirual Weapon and template\nif (args[0] === \"off\") {\n  let removeItem = tactor.items.find(i => i.data.flags?.DAESRD?.SpiritualWeapon === tactor.id)\n  let template = canvas.templates.placeables.find(i => i.data.flags.DAESRD.SpiritualWeapon?.ActorId === tactor.id)\n  if(removeItem) await tactor.deleteOwnedItem(removeItem.id);\n  if(template) await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", [template.id])\n}",
          "author": "zrPR3wueYsESSBR3",
          "_id": null,
          "img": "icons/svg/dice-target.svg",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        },
        "options": {},
        "apps": {},
        "compendium": null
      }
    },
    "dae": {
      "activeEquipped": false,
      "alwaysActive": false,
      "macro": {
        "name": "Spiritual Weapon",
        "img": "icons/skills/melee/strike-axe-energy-pink.webp",
        "type": "script",
        "scope": "global",
        "command": "",
        "author": "3Yi0HjF4PKCA4vX0",
        "ownership": {
          "default": 3
        },
        "_id": null,
        "folder": null,
        "sort": 0,
        "flags": {},
        "_stats": {
          "coreVersion": "12.325",
          "systemId": "dnd5e",
          "systemVersion": "3.2.0",
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null,
          "compendiumSource": null,
          "duplicateSource": null
        }
      }
    },
    "midi-qol": {
      "onUseMacroName": "",
      "effectActivation": false,
      "itemCondition": "",
      "reactionCondition": "",
      "otherCondition": "",
      "effectCondition": "",
      "rollAttackPerTarget": "default",
      "removeAttackDamageButtons": "default"
    },
    "core": {},
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false,
      "autoFailFriendly": false,
      "autoSaveFriendly": false,
      "offHandWeapon": false,
      "ignoreTotalCover": false,
      "confirmTargets": "default",
      "noConcentrationCheck": false,
      "idr": false,
      "idi": false,
      "idv": false,
      "ida": false
    },
    "dnd5e": {
      "riders": {
        "activity": [],
        "effect": []
      },
      "migratedProperties": [
        "vocal",
        "somatic"
      ]
    },
    "tidy5e-sheet": {
      "section": "",
      "actionSection": ""
    }
  },
  "system": {
    "description": {
      "value": "<p><em>Calling upon the holy power of your chosen deity, you summon a weapon of pure energy into your hand before it flies off and attacks your enemies.</em></p><p><strong>Summoning Spell</strong> </p><p>You create a weapon which can take any form you choose. It cannot be damaged or destroyed directly, and follows your commands.</p><ul><li><p>It is a small &amp;reference[construct], and acts at the end of your turns.</p></li><li><p>It is immune to all damage and conditions.</p></li><li><p>The spiritual weapon can fly up to 30 ft. and make an attack against a creature within 5 ft. of it.</p></li></ul><p><strong>Melee Spell Attack</strong> </p><ul><li><p><strong>Hit:</strong> Target takes 1d8 + your spellcasting ability modifer force damage.*</p></li></ul><p></p><p><strong>*</strong> <strong>Upcasting:</strong> Increase damage by [[/damage 1d8 force]] for every<strong>two spell levels</strong> above 2nd.</p>",
      "chat": "<p><strong>Summoning Spell</strong></p><p>You create a weapon which can take any form you choose. It cannot be damaged or destroyed directly, and follows your commands.</p><ul><li><p>It is a small &amp;reference[construct], and acts at the end of your turns.</p></li><li><p>It is immune to all damage and conditions.</p></li><li><p>The spiritual weapon can fly up to 30 ft. and make an attack against a creature within 5 ft. of it.</p></li></ul><p><strong>Melee Spell Attack</strong></p><ul><li><p><strong>Hit:</strong> Target takes 1d8 + your spellcasting ability modifer force damage.*</p></li></ul><p></p><p><strong>*</strong> <strong>Upcasting:</strong> Increase damage by [[/damage 1d8 force]] for every<strong>two spell levels</strong> above 2nd.</p>"
    },
    "source": {
      "custom": "elkan5e.com/spells/spirtual-weapon",
      "revision": 1,
      "rules": "",
      "book": "Elkan 5e",
      "page": "",
      "license": ""
    },
    "activation": {
      "type": "bonus",
      "condition": "",
      "value": 1
    },
    "duration": {
      "value": "1",
      "units": "minute"
    },
    "target": {
      "affects": {
        "choice": false,
        "count": "",
        "type": ""
      },
      "template": {
        "units": "",
        "contiguous": false,
        "type": ""
      }
    },
    "range": {
      "value": "30",
      "units": "ft",
      "special": ""
    },
    "uses": {
      "max": "",
      "recovery": [],
      "spent": 0
    },
    "ability": "",
    "level": 2,
    "school": "con",
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": true
    },
    "properties": [
      "vocal",
      "somatic",
      "concentration"
    ],
    "activities": {
      "dnd5eactivity000": {
        "_id": "dnd5eactivity000",
        "type": "summon",
        "activation": {
          "type": "action",
          "value": null,
          "override": false
        },
        "consumption": {
          "targets": [],
          "scaling": {
            "allowed": false,
            "max": ""
          },
          "spellSlot": true
        },
        "description": {
          "chatFlavor": ""
        },
        "duration": {
          "units": "inst",
          "concentration": false,
          "override": false
        },
        "effects": [],
        "range": {
          "override": false
        },
        "target": {
          "type": "creature",
          "value": 1,
          "units": "ft",
          "width": null,
          "override": false,
          "prompt": true
        },
        "uses": {
          "spent": 0,
          "max": "",
          "recovery": []
        },
        "bonuses": {
          "ac": "",
          "hd": "",
          "hp": "",
          "attackDamage": "@attributes.spell.mod + (floor(@scaling.increase)/2)d8",
          "saveDamage": "",
          "healing": ""
        },
        "creatureSizes": [],
        "creatureTypes": [
          "construct"
        ],
        "match": {
          "proficiency": true,
          "attacks": true,
          "saves": false,
          "ability": ""
        },
        "profiles": [
          {
            "count": "",
            "name": "",
            "_id": "LYIitPikaNjfVR3A",
            "uuid": "Compendium.elkan5e.elkan5e-summoned-creatures.Actor.0kYGlyU3FvoGNZ9Q",
            "level": {
              "min": null,
              "max": null
            }
          }
        ],
        "summon": {
          "identifier": "",
          "mode": "",
          "prompt": true
        },
        "sort": 0,
        "name": "",
        "img": "",
        "appliedEffects": []
      }
    },
    "identifier": ""
  },
  "_id": "dS4ySeVo4CniTHTh",
  "_key": "!items!dS4ySeVo4CniTHTh"
}