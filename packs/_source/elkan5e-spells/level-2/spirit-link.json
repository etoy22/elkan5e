{
	"name": "Spirit Link",
	"type": "spell",
	"img": "icons/magic/control/energy-stream-link-white.webp",
	"effects": [
		{
			"_id": "uFwBXvesTDbyGT7k",
			"flags": {
				"dae": {
					"transfer": false,
					"stackable": "none",
					"specialDuration": [],
					"macroRepeat": "none",
					"selfTarget": false,
					"selfTargetAlways": false,
					"durationExpression": "",
					"disableIncapacitated": false,
					"dontApply": false,
					"showIcon": false,
					"enableCondition": "",
					"disableCondition": ""
				},
				"ActiveAuras": {
					"isAura": false,
					"ignoreSelf": false,
					"hidden": false,
					"height": false,
					"aura": "None",
					"radius": "",
					"alignment": "",
					"type": "",
					"displayTemp": false,
					"hostile": false,
					"onlyOnce": false,
					"nameOverride": "",
					"customCheck": "",
					"wallsBlock": "system",
					"statuses": []
				},
				"core": {
					"overlay": false
				}
			},
			"changes": [
				{
					"key": "system.traits.dr.all",
					"mode": 0,
					"value": "true",
					"priority": 0
				},
				{
					"key": "flags.dae.onUpdateTarget",
					"mode": 0,
					"value": "Warding Bond, ItemMacro, system.attributes.hp.value",
					"priority": 20
				}
			],
			"disabled": false,
			"duration": {
				"startTime": null,
				"seconds": 3600,
				"combat": null,
				"rounds": null,
				"turns": null,
				"startRound": null,
				"startTurn": null
			},
			"tint": "#ffffff",
			"transfer": false,
			"origin": null,
			"name": "Spirit Link",
			"description": "",
			"statuses": [],
			"img": "icons/magic/control/energy-stream-link-white.webp",
			"type": "base",
			"system": {},
			"sort": 0,
			"_key": "!items.effects!Yp0dI1hIN0FPMGdH.uFwBXvesTDbyGT7k"
		}
	],
	"folder": "6J3i75lfD1J0xYwA",
	"flags": {
		"dynamiceffects": {
			"equipActive": true,
			"alwaysActive": false,
			"effects": [
				{
					"modSpecKey": "data.attributes.ac.value",
					"value": "1",
					"mode": "+",
					"targetSpecific": false,
					"id": 1,
					"itemId": "IMBPFYUMfvSlvnlM",
					"active": true,
					"_targets": [],
					"label": "Attributes Armor Class"
				},
				{
					"modSpecKey": "data.traits.dr.all",
					"value": "0",
					"mode": "+",
					"targetSpecific": false,
					"id": 2,
					"itemId": "IMBPFYUMfvSlvnlM",
					"active": true,
					"_targets": [],
					"label": "Traits Damage Resistance All"
				},
				{
					"modSpecKey": "data.bonuses.abilities.save",
					"value": "1",
					"mode": "+",
					"targetSpecific": false,
					"id": 3,
					"itemId": "IMBPFYUMfvSlvnlM",
					"active": true,
					"_targets": []
				}
			]
		},
		"dae": {
			"activeEquipped": false,
			"alwaysActive": false
		},
		"itemacro": {
			"macro": {
				"_data": {
					"name": "Warding Bond",
					"type": "script",
					"scope": "global",
					"command": "//DAE Macro Execute, Effect Value = \"Macro Name\" @target @item\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\n\nlet caster = canvas.tokens.placeables.find(token => token?.actor?.items.get(DAEItem._id) != null)\n\nif (args[0] === \"on\") {\n    await DAE.setFlag(tactor, \"WardingBondIds\", {\n        tokenID: tactor.id,\n        casterID: caster.actor.id\n    })\n    SetWardingBondHook(target)\n\n}\n\nasync function SetWardingBondHook(target) {\n    const hookId = Hooks.on(\"preUpdateActor\", async (actor, update) => {\n        let flag = await DAE.getFlag(tactor, \"WardingBondIds\")\n        if (flag.tokenID !== actor.id) return\n        if (!\"actorData.data.attributes.hp\" in update) return;\n        let oldHP = actor.data.data.attributes.hp.value;\n        let newHP = getProperty(update, \"data.attributes.hp.value\");\n        let hpChange = oldHP - newHP\n        if (hpChange > 0 && typeof hpChange === \"number\") {\n            let caster = game.actors.get(flag.casterID).getActiveTokens()[0]\n            caster.actor.applyDamage(hpChange)\n        }\n    })\n    DAE.setFlag(tactor, \"WardingBondHook\", hookId)\n    \n}\n\nasync function RemoveHook() {\n    let flag = await DAE.getFlag(tactor, 'WardingBondHook');\n    Hooks.off(\"preUpdateActor\", flag);\n    await DAE.unsetFlag(tactor, \"WardingBondHook\");\n}\n\nif (args[0] === \"off\") {\n    RemoveHook()\n    await DAE.unsetFlag(tactor, \"WardingBondIds\");\n    console.log(\"Death Ward removed\");\n}\n\nif (args[0] === \"each\") {\n    await RemoveHook()\n    await SetWardingBondHook()\n}",
					"author": "E4BVikjIkVl2lL2j"
				},
				"data": {
					"name": "Warding Bond",
					"type": "script",
					"scope": "global",
					"command": "//DAE Macro Execute, Effect Value = \"Macro Name\" @target @item\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst target = canvas.tokens.get(lastArg.tokenId)\n\nconst DAEItem = lastArg.efData.flags.dae.itemData\n\nlet caster = canvas.tokens.placeables.find(token => token?.actor?.items.get(DAEItem._id) != null)\n\nif (args[0] === \"on\") {\n    await DAE.setFlag(tactor, \"WardingBondIds\", {\n        tokenID: tactor.id,\n        casterID: caster.actor.id\n    })\n    SetWardingBondHook(target)\n\n}\n\nasync function SetWardingBondHook(target) {\n    const hookId = Hooks.on(\"preUpdateActor\", async (actor, update) => {\n        let flag = await DAE.getFlag(tactor, \"WardingBondIds\")\n        if (flag.tokenID !== actor.id) return\n        if (!\"actorData.data.attributes.hp\" in update) return;\n        let oldHP = actor.data.data.attributes.hp.value;\n        let newHP = getProperty(update, \"data.attributes.hp.value\");\n        let hpChange = oldHP - newHP\n        if (hpChange > 0 && typeof hpChange === \"number\") {\n            let caster = game.actors.get(flag.casterID).getActiveTokens()[0]\n            caster.actor.applyDamage(hpChange)\n        }\n    })\n    DAE.setFlag(tactor, \"WardingBondHook\", hookId)\n    \n}\n\nasync function RemoveHook() {\n    let flag = await DAE.getFlag(tactor, 'WardingBondHook');\n    Hooks.off(\"preUpdateActor\", flag);\n    await DAE.unsetFlag(tactor, \"WardingBondHook\");\n}\n\nif (args[0] === \"off\") {\n    RemoveHook()\n    await DAE.unsetFlag(tactor, \"WardingBondIds\");\n    console.log(\"Death Ward removed\");\n}\n\nif (args[0] === \"each\") {\n    await RemoveHook()\n    await SetWardingBondHook()\n}",
					"author": "E4BVikjIkVl2lL2j"
				},
				"options": {},
				"apps": {},
				"compendium": null,
				"name": "Warding Bond",
				"img": "icons/magic/control/energy-stream-link-white.webp",
				"type": "script",
				"scope": "global",
				"command": "",
				"author": "3Yi0HjF4PKCA4vX0",
				"_id": null,
				"folder": null,
				"sort": 0,
				"ownership": {
					"default": 0
				},
				"flags": {},
				"_stats": {
					"systemId": null,
					"systemVersion": null,
					"coreVersion": null,
					"createdTime": null,
					"modifiedTime": null,
					"lastModifiedBy": null
				}
			}
		},
		"midi-qol": {
			"onUseMacroName": "",
			"effectActivation": false,
			"itemCondition": "",
			"reactionCondition": "",
			"otherCondition": "",
			"effectCondition": "",
			"rollAttackPerTarget": "default",
			"removeAttackDamageButtons": "default"
		},
		"core": {},
		"midiProperties": {
			"nodam": false,
			"fulldam": false,
			"halfdam": false,
			"rollOther": false,
			"critOther": false,
			"magicdam": false,
			"magiceffect": false,
			"concentration": false,
			"toggleEffect": false,
			"ignoreTotalCover": false,
			"autoFailFriendly": false,
			"autoSaveFriendly": false,
			"offHandWeapon": false,
			"confirmTargets": "default",
			"noConcentrationCheck": false,
			"idr": false,
			"idi": false,
			"idv": false,
			"ida": false
		},
		"dnd5e": {
			"riders": {
				"activity": [],
				"effect": []
			},
			"migratedProperties": [
				"vocal",
				"somatic",
				"material"
			]
		},
		"tidy5e-sheet": {
			"section": "",
			"actionSection": ""
		}
	},
	"system": {
		"description": {
			"value": "<p><em>You slip a platinum ring onto two allies or reach out in the direction of the two linked rings. You speak an old chant to bind their souls together for a time. When one of them is injured, the spirit of the other sacrifices their life force to share the burden.</em></p><p><strong>Materials:</strong> You require a pair of @UUID[Compendium.elkan5e.elkan5e-spells.Item.tU3np7ze5Y6YFx0K]{Platinum Rings}, typically valued at 50 gold each.</p><p>Your targets must be wearing the rings when you cast the spell. Normally this spell has a range of 30 ft., but if you touch two creatures while casting, you can slip the rings onto them as part of casting this spell.</p><p><strong>Buff</strong></p><p>A target cannot be targeted by this spell if they are unwilling.</p><ul><li><p>While the two targets chose are within 60 feet of each other they take half damage from all sources, and the other linked creature takes the other half (which cannot be reduced in any way).</p></li><li><p>The spell ends if either of the targets drops to 0 hit points or if the targets become seperated by more than 60 feet. Either of the linked creatures can dismiss the spell at the start of their turn.</p></li></ul>",
			"chat": "<p><strong>Materials:</strong> You require a pair of @UUID[Compendium.elkan5e.elkan5e-spells.Item.tU3np7ze5Y6YFx0K]{Platinum Rings}, typically valued at 50 gold each.</p><p>Your targets must be wearing the rings when you cast the spell. Normally this spell has a range of 30 ft., but if you touch two creatures while casting, you can slip the rings onto them as part of casting this spell.</p><p><strong>Buff</strong></p><p>A target cannot be targeted by this spell if they are unwilling.</p><ul><li><p>While the two targets chose are within 60 feet of each other they take half damage from all sources, and the other linked creature takes the other half (which cannot be reduced in any way).</p></li><li><p>The spell ends if either of the targets drops to 0 hit points or if the targets become seperated by more than 60 feet. Either of the linked creatures can dismiss the spell at the start of their turn.</p></li></ul>"
		},
		"source": {
			"custom": "elkan5e.com/spells/spirit-link",
			"revision": 1,
			"rules": "",
			"book": "Elkan 5e",
			"page": "",
			"license": ""
		},
		"activation": {
			"type": "action",
			"condition": "",
			"value": 1
		},
		"duration": {
			"value": "1",
			"units": "hour"
		},
		"target": {
			"affects": {
				"type": "ally",
				"count": "2",
				"choice": false,
				"special": ""
			},
			"template": {
				"units": "",
				"contiguous": false,
				"type": ""
			}
		},
		"range": {
			"value": "30",
			"units": "ft",
			"special": ""
		},
		"uses": {
			"max": "",
			"recovery": [],
			"spent": 0
		},
		"ability": "",
		"level": 2,
		"school": "abj",
		"materials": {
			"value": "",
			"consumed": false,
			"cost": 100,
			"supply": 0
		},
		"preparation": {
			"mode": "prepared",
			"prepared": true
		},
		"properties": [
			"vocal",
			"somatic",
			"material"
		],
		"activities": {
			"dnd5eactivity000": {
				"_id": "dnd5eactivity000",
				"type": "utility",
				"activation": {
					"type": "action",
					"value": null,
					"override": false
				},
				"consumption": {
					"targets": [],
					"scaling": {
						"allowed": false,
						"max": ""
					},
					"spellSlot": true
				},
				"description": {
					"chatFlavor": ""
				},
				"duration": {
					"units": "inst",
					"concentration": false,
					"override": false
				},
				"effects": [
					{
						"_id": "uFwBXvesTDbyGT7k"
					}
				],
				"range": {
					"override": false
				},
				"target": {
					"prompt": true,
					"template": {
						"contiguous": false,
						"units": "ft"
					},
					"affects": {
						"choice": false
					},
					"override": false
				},
				"uses": {
					"spent": 0,
					"max": "",
					"recovery": []
				},
				"roll": {
					"formula": "",
					"name": "",
					"prompt": false,
					"visible": false
				},
				"sort": 0
			}
		},
		"identifier": ""
	},
	"_id": "Yp0dI1hIN0FPMGdH",
	"_key": "!items!Yp0dI1hIN0FPMGdH"
}